@use '@angular/material' as mat;
@use 'sass:map';

@include mat.core();

$jbr-primary: mat.define-palette(mat.$teal-palette, 500, 100, 900, 100);
$jbr-accent: mat.define-palette(mat.$amber-palette, 500, 100, 900, 100);
$jbr-warn: mat.define-palette(mat.$red-palette, 500, 100, 900, 100);

$jbr-typography: mat.define-typography-config();

$jbr-theme: mat.define-light-theme((
  color: (
    primary: $jbr-primary,
    accent: $jbr-accent,
    warn: $jbr-warn,
  ),
  typography: $jbr-typography
));

$jbr-dark-primary: mat.define-palette(mat.$amber-palette, 500, 100, 900);
$jbr-dark-accent: mat.define-palette(mat.$amber-palette, 500, 100, 900);
$jbr-dark-warn: mat.define-palette(mat.$red-palette, 500, 100, 900);

$jbr-dark-theme: mat.define-dark-theme((
  color: (
    primary: $jbr-dark-primary,
    accent: $jbr-dark-accent,
    warn: $jbr-dark-warn,
  ),
  typography: $jbr-typography
));

@include mat.all-component-themes($jbr-theme);

@media (prefers-color-scheme: dark) {
  @include mat.all-component-colors($jbr-dark-theme);
}


@function get-palette-from-theme($theme, $palette-type) {
  $color-config: mat.get-color-config($theme);
  @return map.get($color-config, $palette-type);
}

@function get-color-from-theme($theme, $palette-type, $type) {
  $palette: get-palette-from-theme($theme, $palette-type);
  @return map.get($palette, $type);
}

@function get-mode-palettes-for($palette-type) {
  @return (
    light: get-palette-from-theme($jbr-theme, $palette-type),
    dark: get-palette-from-theme($jbr-dark-theme, $palette-type),
  )
}

@function get-mode-colors-for($palette-type, $type) {
  @return (
    light: get-color-from-theme($jbr-theme, $palette-type, $type),
    dark: get-color-from-theme($jbr-dark-theme, $palette-type, $type)
  );
}




