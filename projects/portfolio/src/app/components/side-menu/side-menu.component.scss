@use 'sass:map';
@use '../../../theme-helpers' as theme;

$start-left: 37px;
$depth: 8;

$palettes: theme.get-mode-palettes-for(primary);
$light-palette: nth($palettes, 1);
$dark-palette: nth($palettes, 2);


@mixin colorVars($total:1, $palette, $inactive-color) {
  @for $i from 0 through $total {
    @if $i == 0 {
      --menu-color-item-color-0: #{$inactive-color};
    } @else {
      --menu-color-item-color-#{$i}: #{map.get($palette, (900 - (($i - 1) * 100)))};
    }
  }
}

@mixin activeMenuItemColours($total:1) {
  @for $i from 0 through $total {
    &.active-#{$i} {
      color: var(--menu-color-item-color-#{$i});
    }
  }
}

@mixin menuItemScales($total: 1) {
  @for $i from 0 through $total {
    &.active-#{$i} {
      ::ng-deep {
        .mdc-button__label {
          transform: scale(#{1 + (0.01 * $i)});
          transform-origin: center left;
          transition: transform 400ms;
        }
      }
    }
  }
}

@mixin nestedMenuItemPositions($total:1, $i:1) {
  @if $i <= $total {
    &> mat-nested-tree-node {
      &> div.mat-tree-node > .mat-mdc-button {
        padding-left: 10px * $i;
      }
      &> div[role=group] {
        &> mat-tree-node > .mat-mdc-button {
          padding-left: (10px * $i) + $start-left;
        }
        @include nestedMenuItemPositions($total, $i + 1);
      }
    }
  }
}


:host {
  display: block;
  padding: 20px 0;

  @include colorVars($depth, $light-palette, #a1a1a1);

  @media (prefers-color-scheme: dark) {
    @include colorVars($depth, $dark-palette, #efefef);
  }

  .side-menu-tree {
    height: 100%;
  }

  .side-menu-tree-invisible {
    display: none;
  }

  .mat-mdc-button {
    width: 100%;
    justify-content: flex-start;
    border-radius: 0;
    text-transform: capitalize;
    transition: color 400ms;

    @include activeMenuItemColours($depth);
    @include menuItemScales($depth);
  }

  mat-tree {

    div[role=group] {
      overflow: hidden;
    }

    &> mat-tree-node > .mat-mdc-button {
      padding-left: $start-left;
    }

    @include nestedMenuItemPositions($depth);
  }
}
