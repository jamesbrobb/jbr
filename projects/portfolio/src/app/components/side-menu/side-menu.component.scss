@use '../../../theme' as theme;


$color: theme.$jbr-primary;

$inactive-color: #455a64;
$active-color: #004D40;
$start-left: 37px;
$depth: 6;


@mixin activeMenuItemColours($total:1) {
  @for $i from 0 through $total {
    &.active-#{$i} {
      @if $i == 0 {
        color: $inactive-color;
      } @else {
        color: #{lighten($active-color, ($i - 1) * 5%)};
      }
    }
  }
}

@mixin nestedMenuItemPositions($total:1, $i:1) {
  @if $i <= $total {
    &> mat-nested-tree-node {
      &> div.mat-tree-node > .mat-mdc-button {
        padding-left: 10px * $i;
      }
      &> div[role=group] {
        &> mat-tree-node > .mat-mdc-button {
          padding-left: (10px * $i) + $start-left;
        }
        @include nestedMenuItemPositions($total, $i + 1);
      }
    }
  }
}


:host {
  display: block;
  padding: 20px 0;

  .side-menu-tree {
    height: 100%;
  }

  .side-menu-tree-invisible {
    display: none;
  }

  .mat-mdc-button {
    width: 100%;
    justify-content: flex-start;
    border-radius: 0;
    text-transform: capitalize;
    transition: color 400ms;

    @include activeMenuItemColours($depth);
  }

  mat-tree {

    div[role=group] {
      overflow: hidden;
    }

    &> mat-tree-node > .mat-mdc-button {
      padding-left: $start-left;
    }

    @include nestedMenuItemPositions($depth);
  }
}
